name: "build"

on:
  workflow_dispatch:

  push:
    branches:
      - master
      - develop
    tags:
      - v*

  pull_request:
    branches:
      - master
      - develop

  schedule:
    - cron: '0 0 * * 1'
    
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  linux-x86_64:
    if: false
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - script: linux-x86_64/ubuntu-22.04
            image: rocstreaming/env-ubuntu:22.04

          - script: linux-x86_64/ubuntu-20.04
            image: rocstreaming/env-ubuntu:20.04

          - script: linux-x86_64/ubuntu-18.04
            image: rocstreaming/env-ubuntu:18.04

          - script: linux-x86_64/ubuntu-16.04
            image: rocstreaming/env-ubuntu:16.04

          - script: linux-x86_64/ubuntu-14.04
            image: rocstreaming/env-ubuntu:14.04

          - script: linux-x86_64/debian
            image: rocstreaming/env-debian

          - script: linux-x86_64/fedora
            image: rocstreaming/env-fedora

          - script: linux-x86_64/opensuse
            image: rocstreaming/env-opensuse

          - script: linux-x86_64/archlinux
            image: rocstreaming/env-archlinux

          - script: linux-x86_64/alpine
            image: rocstreaming/env-alpine

    name: ${{ matrix.script }}
    steps:
      - name: Pull docker image
        run: docker pull ${{ matrix.image }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and test
        run: |
          scripts/ci_checks/docker.sh ${{ matrix.image }} scripts/ci_checks/${{ matrix.script }}.sh

  linux-arm:
    if: false
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - script: linux-arm/aarch64-linux-gnu-gcc-7.4
            image: rocstreaming/toolchain-aarch64-linux-gnu:gcc-7.4

          - script: linux-arm/arm-linux-gnueabihf-gcc-4.9
            image: rocstreaming/toolchain-arm-linux-gnueabihf:gcc-4.9

          - script: linux-arm/arm-bcm2708hardfp-linux-gnueabi-gcc-4.7
            image: rocstreaming/toolchain-arm-bcm2708hardfp-linux-gnueabi:gcc-4.7

    name: ${{ matrix.script }}
    steps:
      - name: Pull docker image
        run: docker pull ${{ matrix.image }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and test
        run: |
          scripts/ci_checks/docker.sh ${{ matrix.image }} scripts/ci_checks/${{ matrix.script }}.sh

  linux-checks:
    if: false
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - script: linux-checks/conditional-build
            image: rocstreaming/env-ubuntu-minimal

          - script: linux-checks/static-shared
            image: rocstreaming/env-ubuntu-minimal

          - script: linux-checks/debug-build
            image: rocstreaming/env-ubuntu-minimal

          - script: linux-checks/sanitizers
            image: rocstreaming/env-ubuntu

          - script: linux-checks/valgrind
            image: rocstreaming/env-ubuntu

          - script: linux-checks/check-formatting
            image: rocstreaming/env-ubuntu

    name: ${{ matrix.script }}
    steps:
      - name: Pull docker image
        run: docker pull ${{ matrix.image }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and test
        run: |
          scripts/ci_checks/docker.sh ${{ matrix.image }} scripts/ci_checks/${{ matrix.script }}.sh

  android-linux:
    if: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: rocstreaming/toolchain-linux-android:ndk21
            toolchain: aarch64-linux-android29
            shortname: android29-aarch64

          - image: rocstreaming/toolchain-linux-android:ndk21
            toolchain: armv7a-linux-androideabi29
            shortname: android29-armv7a

          - image: rocstreaming/toolchain-linux-android:ndk21
            toolchain: x86_64-linux-android29
            shortname: android29-x86_64

          - image: rocstreaming/toolchain-linux-android:ndk21
            toolchain: i686-linux-android29
            shortname: android29-i686

    runs-on: ubuntu-latest

    name: ${{ matrix.shortname }}/linux
    steps:
      - name: Pull docker image
        run: docker pull ${{ matrix.image }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build
        run: |
          scripts/ci_checks/docker.sh ${{ matrix.image }} \
            scripts/ci_checks/android/linux.sh ${{ matrix.toolchain }}

  android-macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - abi: x86_64
            api: 24
            ndk: 21.4.7075529
            build_tools: 28.0.3
            cmake: 3.10.2.4988404
            avd_abi: x86_64
            avd_tgt: default

    runs-on: macos-12

    env:
      CI_ABI: ${{ matrix.abi }}
      CI_API: ${{ matrix.api }}
      CI_NDK: ${{ matrix.ndk }}
      CI_AVD: system-images;android-${{ matrix.api }};${{ matrix.avd_tgt }};${{ matrix.avd_abi }}

    name: android${{ matrix.api }}-${{ matrix.abi }}/macos
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Android components
        uses: maxim-lobanov/setup-android-tools@v1
        with:
          cache: true
          packages: |
            platforms;android-${{ matrix.api }}
            build-tools;${{ matrix.build_tools }}
            ndk;${{ matrix.ndk }}
            cmake;${{ matrix.cmake }}
            system-images;android-${{ matrix.api }};${{ matrix.avd_tgt }};${{ matrix.avd_abi }}
            emulator

      - name: List Android components
        run: |
          /Users/runner/Library/Android/sdk/tools/bin/sdkmanager --list

      - name: Install Android emulator
        run: |
          wget -O emulator.zip \
            https://dl.google.com/android/repository/emulator-darwin_x64-9310560.zip
          unzip emulator.zip

      - name: Install system dependencies
        run: |
          scripts/ci_checks/android/macos_deps.sh

      - name: Build and test
        run: |
          scripts/ci_checks/android/macos_build.sh

  macos:
    if: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            ver: 12

          - arch: x86_64
            ver: 11

          - arch: x86_64
            ver: 10.15

    runs-on: macos-${{ matrix.ver }}

    name: macos-${{ matrix.arch }}/${{ matrix.ver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and test
        run: |
          scripts/ci_checks/macos/macos.sh

  triggers:
    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trigger roc-go
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          scripts/ci_checks/trigger.sh roc-streaming/roc-go \
            "master" "${{ secrets.REPO_TRIGGERING }}"

      - name: Trigger roc-java
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          scripts/ci_checks/trigger.sh roc-streaming/roc-java \
            "master" "${{ secrets.REPO_TRIGGERING }}"

      - name: Trigger roc-pulse
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          scripts/ci_checks/trigger.sh roc-streaming/roc-pulse \
            "main" "${{ secrets.REPO_TRIGGERING }}"

      - name: Trigger rt-tests
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' }}
        run: |
          scripts/ci_checks/trigger.sh roc-streaming/rt-tests \
            "${GITHUB_REF##*/}" "${{ secrets.REPO_TRIGGERING }}"

      - name: Trigger roc-streaming.github.io
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          scripts/ci_checks/trigger.sh roc-streaming/roc-streaming.github.io \
            "source" "${{ secrets.REPO_TRIGGERING }}"
